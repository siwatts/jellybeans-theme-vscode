{
	"name": "Jellybeans.vim",
	"include": "./Jellybeans-plus-color-theme.json",
	"tokenColors": [
		// == Disable variable highlighting except actual method parameters ==
		{
			"scope": [
				"variable.parameter",
			],
			"settings": {
				"foreground": "#c6b6ee", "fontStyle": "",
			},
		},
		{
			"scope": [
				"variable.other",
			],
			"settings": {
				"foreground": "#e8e8d3", "fontStyle": "",
			},
		},
		// == Language specific tweaks ==
		{
			// It's actually only the #include and #define which are light blue in nvim TreeSitter. The conditional #ifdef stuff is not
			"scope": [
				"keyword.control.directive.include.c",
				"keyword.control.directive.define.c",
				"keyword.control.directive.include.cpp",
				"keyword.control.directive.define.cpp",
				"keyword.control.import.python",
			],
			"settings": {
				"foreground": "#8fbfdc", "fontStyle": "",
			},
		},
		{
			"scope": [
				"entity.name.namespace",
			],
			"settings": {
				"foreground": "#e8e8d3", "fontStyle": "",
			},
		},
		// == All languages ==
		{
			// Gets True/False, but also clobbers sme other constants which are Special green like python None
			// Can also use semantic "builtinConstant"
			"scope": [
				"constant.language",
			],
			"settings": {
				"foreground": "#cf6a4c", "fontStyle": "",
			},
		},
		{
			"scope": [
				"constant.character.escape",
			],
			"settings": {
				"foreground": "#799d6a", "fontStyle": "",
			},
		},
		{
			// Revert the change to special green in jb+ back to constant red
			// But only for enummember this time, not other variable constants like variables that python thinks are a constant
			"scope": [
				//"variable.other.constant",
				"variable.other.enummember"
			],
			"settings": {
				"foreground": "#cf6a4c",
			}
		},
		{
			// Basic language types (int, bool etc.) to :hi Type orange as seen in vim
			"scope": [
				"storage.type.built-in.primitive",
			],
			"settings": {
				"foreground": "#ffb964",
			}
		},
		{
			// Storage class such as `const` in C/C++, `:hi StorageClass` in vim (though not nvim with TreeSitter)
			"scope": [
				"storage.modifier",
			],
			"settings": {
				"foreground": "#c59f6f",
			}
		},
		{
			// Operators ('=', '<' etc.) to :hi PreProc cyan as seen in vim
			"scope": [
				"keyword.operator",
			],
			"settings": {
				"foreground": "#8fbfdc",
			}
		},
	],
	"semanticTokenColors": {
		"selfParameter": "#799d6a", // Special Green, for python 'self' etc.
		"macro": "#cf6a4c", // e.g. subjects of #define in C++, where they are defined and used. To Constant Red, but clashes with enums (as in neovim)
	},
}
